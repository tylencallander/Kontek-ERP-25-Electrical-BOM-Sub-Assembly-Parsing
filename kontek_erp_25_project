import pandas as pd
import json
import openpyxl

def parse_bom_excel(input_file):
    # Load the workbook and select the first sheet
    wb = openpyxl.load_workbook(input_file)
    ws = wb.active

    errors = {"REMOVED": []}  # Only logging rows with red fill under "REMOVED"

    # Iterate over rows in the specified worksheet
    for row in ws.iter_rows(min_row=2):
        # Check if the cell is marked with the 'red' fill color
        if row[0].fill.start_color.index == 'FFFF0000':  # Assuming first cell's color is indicative of the entire row
            # Extract values safely
            item_no = row[0].value if row[0] is not None else ''
            quantity = row[1].value if row[1] is not None else 0
            received = row[2].value if row[2] is not None else ''
            from_stock = row[3].value if row[3] is not None else ''
            catalog = row[4].value if row[4] is not None else ''

            errors['REMOVED'].append({
                'item_no': item_no,
                'quantity': quantity,
                'received': received,
                'from_stock': from_stock,
                'catalog': catalog
            })
            print(f"Logged REMOVED item due to red fill: {item_no}")

    return errors

def save_to_json(data, filename):
    with open(filename, 'w') as f:
        json.dump(data, f, indent=4)

def main():
    input_file = "P:/KONTEK/ENGINEERING/ELECTRICAL/Application Development/ERP/25. Electrical BOM Sub Assembly Parsing/Example BOMs/LANDING_GEAR_TECHNOLOGIES_WWTS_BOM_2019326_20221115.xlsx"
    errors = parse_bom_excel(input_file)

    save_to_json(errors, 'errors.json')

    print("\nParsing Complete!\n")
    print(f"Logged errors to errors.json")

if __name__ == "__main__":
    main()
